# A sample Makefile for building Google Test and using it in user
# tests.  Please tweak it to suit your environment and project.  You
# may want to move it to your project's root directory.
#
# SYNOPSIS:
#
#   make [all]  - makes everything.
#   make TARGET - makes the given target.
#   make clean  - removes all files generated by make.

# Where to find user code.
USER_NODE_DIR = node
USER_IF_DIR = interface
USER_LINK_DIR = link
USER_NETWORK_DIR = network
USER_BIN_DIR = bin
USER_PACKET_DIR = packet

# Flags passed to the C++ compiler.
CXXFLAGS += -g -Wall -Wextra -pthread

# All tests produced by this Makefile.  Remember to add new tests you
# created to the list.
TESTS = network_simulator

# House-keeping build targets.

all : $(TESTS)

clean :
	rm -f $(TESTS) *.o

main.o : main.cpp 
	$(CXX) $(CXXFLAGS) -c main.cpp

ns_node_router.o : $(USER_NODE_DIR)/ns_node_router.cpp $(USER_NODE_DIR)/ns_node_router.h 
	$(CXX) $(CXXFLAGS) -c $(USER_NODE_DIR)/ns_node_router.cpp

ns_node_router_if.o : $(USER_IF_DIR)/ns_node_router_if.cpp $(USER_IF_DIR)/ns_node_router_if.h
	$(CXX) $(CXXFLAGS) -c $(USER_IF_DIR)/ns_node_router_if.cpp

ns_node_router_link.o : $(USER_LINK_DIR)/ns_node_router_link.cpp $(USER_LINK_DIR)/ns_node_router_link.h 
	$(CXX) $(CXXFLAGS) -c $(USER_LINK_DIR)/ns_node_router_link.cpp

ns_arp_table.o : $(USER_NETWORK_DIR)/ns_arp_table.cpp $(USER_NETWORK_DIR)/ns_arp_table.h 
	$(CXX) $(CXXFLAGS) -c $(USER_NETWORK_DIR)/ns_arp_table.cpp

ns_routing_table.o : $(USER_NETWORK_DIR)/ns_routing_table.cpp $(USER_NETWORK_DIR)/ns_routing_table.h 
	$(CXX) $(CXXFLAGS) -c $(USER_NETWORK_DIR)/ns_routing_table.cpp

ns_shortest_path.o : $(USER_NETWORK_DIR)/ns_shortest_path.cpp $(USER_NETWORK_DIR)/ns_shortest_path.h 
	$(CXX) $(CXXFLAGS) -c $(USER_NETWORK_DIR)/ns_shortest_path.cpp

ns_network.o : $(USER_NETWORK_DIR)/ns_network.cpp $(USER_NETWORK_DIR)/ns_network.h 
	$(CXX) $(CXXFLAGS) -c $(USER_NETWORK_DIR)/ns_network.cpp

ns_packet_ethr.o : $(USER_PACKET_DIR)/ns_packet_ethr.cpp $(USER_PACKET_DIR)/ns_packet_ethr.h 
	$(CXX) $(CXXFLAGS) -c $(USER_PACKET_DIR)/ns_packet_ethr.cpp

network_simulator : main.o ns_node_router.o ns_node_router_if.o ns_node_router_link.o ns_arp_table.o ns_routing_table.o ns_shortest_path.o ns_network.o ns_packet_ethr.o 
	$(CXX) $(CXXFLAGS) -lpthread $^ -o $@

